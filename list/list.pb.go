// Code generated by protoc-gen-go. DO NOT EDIT.
// source: list.proto

/*
Package list is a generated protocol buffer package.

It is generated from these files:
	list.proto

It has these top-level messages:
	InputMsg
	InputResponse
	Nodes
*/
package list

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type InputMsg struct {
	Data int32 `protobuf:"varint,1,opt,name=data" json:"data,omitempty"`
}

func (m *InputMsg) Reset()                    { *m = InputMsg{} }
func (m *InputMsg) String() string            { return proto.CompactTextString(m) }
func (*InputMsg) ProtoMessage()               {}
func (*InputMsg) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *InputMsg) GetData() int32 {
	if m != nil {
		return m.Data
	}
	return 0
}

type InputResponse struct {
	Resp int32 `protobuf:"varint,1,opt,name=resp" json:"resp,omitempty"`
}

func (m *InputResponse) Reset()                    { *m = InputResponse{} }
func (m *InputResponse) String() string            { return proto.CompactTextString(m) }
func (*InputResponse) ProtoMessage()               {}
func (*InputResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *InputResponse) GetResp() int32 {
	if m != nil {
		return m.Resp
	}
	return 0
}

type Nodes struct {
	Node int32 `protobuf:"varint,1,opt,name=node" json:"node,omitempty"`
}

func (m *Nodes) Reset()                    { *m = Nodes{} }
func (m *Nodes) String() string            { return proto.CompactTextString(m) }
func (*Nodes) ProtoMessage()               {}
func (*Nodes) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *Nodes) GetNode() int32 {
	if m != nil {
		return m.Node
	}
	return 0
}

func init() {
	proto.RegisterType((*InputMsg)(nil), "list.InputMsg")
	proto.RegisterType((*InputResponse)(nil), "list.InputResponse")
	proto.RegisterType((*Nodes)(nil), "list.Nodes")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for List service

type ListClient interface {
	// Sending user input funcationlity
	ProcessInput(ctx context.Context, in *InputMsg, opts ...grpc.CallOption) (*InputResponse, error)
	// Linking to Linked List
	InsertInput(ctx context.Context, in *InputMsg, opts ...grpc.CallOption) (*InputResponse, error)
}

type listClient struct {
	cc *grpc.ClientConn
}

func NewListClient(cc *grpc.ClientConn) ListClient {
	return &listClient{cc}
}

func (c *listClient) ProcessInput(ctx context.Context, in *InputMsg, opts ...grpc.CallOption) (*InputResponse, error) {
	out := new(InputResponse)
	err := grpc.Invoke(ctx, "/list.List/ProcessInput", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *listClient) InsertInput(ctx context.Context, in *InputMsg, opts ...grpc.CallOption) (*InputResponse, error) {
	out := new(InputResponse)
	err := grpc.Invoke(ctx, "/list.List/InsertInput", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for List service

type ListServer interface {
	// Sending user input funcationlity
	ProcessInput(context.Context, *InputMsg) (*InputResponse, error)
	// Linking to Linked List
	InsertInput(context.Context, *InputMsg) (*InputResponse, error)
}

func RegisterListServer(s *grpc.Server, srv ListServer) {
	s.RegisterService(&_List_serviceDesc, srv)
}

func _List_ProcessInput_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(InputMsg)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ListServer).ProcessInput(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/list.List/ProcessInput",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ListServer).ProcessInput(ctx, req.(*InputMsg))
	}
	return interceptor(ctx, in, info, handler)
}

func _List_InsertInput_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(InputMsg)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ListServer).InsertInput(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/list.List/InsertInput",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ListServer).InsertInput(ctx, req.(*InputMsg))
	}
	return interceptor(ctx, in, info, handler)
}

var _List_serviceDesc = grpc.ServiceDesc{
	ServiceName: "list.List",
	HandlerType: (*ListServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "ProcessInput",
			Handler:    _List_ProcessInput_Handler,
		},
		{
			MethodName: "InsertInput",
			Handler:    _List_InsertInput_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "list.proto",
}

func init() { proto.RegisterFile("list.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 165 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0xca, 0xc9, 0x2c, 0x2e,
	0xd1, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0x01, 0xb1, 0x95, 0xe4, 0xb8, 0x38, 0x3c, 0xf3,
	0x0a, 0x4a, 0x4b, 0x7c, 0x8b, 0xd3, 0x85, 0x84, 0xb8, 0x58, 0x52, 0x12, 0x4b, 0x12, 0x25, 0x18,
	0x15, 0x18, 0x35, 0x58, 0x83, 0xc0, 0x6c, 0x25, 0x65, 0x2e, 0x5e, 0xb0, 0x7c, 0x50, 0x6a, 0x71,
	0x41, 0x7e, 0x5e, 0x71, 0x2a, 0x48, 0x51, 0x51, 0x6a, 0x71, 0x01, 0x4c, 0x11, 0x88, 0xad, 0x24,
	0xcd, 0xc5, 0xea, 0x97, 0x9f, 0x92, 0x5a, 0x0c, 0x92, 0xcc, 0xcb, 0x4f, 0x49, 0x85, 0x49, 0x82,
	0xd8, 0x46, 0xc5, 0x5c, 0x2c, 0x3e, 0x99, 0xc5, 0x25, 0x42, 0xa6, 0x5c, 0x3c, 0x01, 0x45, 0xf9,
	0xc9, 0xa9, 0xc5, 0xc5, 0x60, 0x03, 0x85, 0xf8, 0xf4, 0xc0, 0x8e, 0x81, 0xd9, 0x2e, 0x25, 0x8c,
	0xc4, 0x87, 0xd9, 0xa6, 0xc4, 0x20, 0x64, 0xc2, 0xc5, 0xed, 0x99, 0x57, 0x9c, 0x5a, 0x54, 0x42,
	0x8a, 0xae, 0x24, 0x36, 0xb0, 0x1f, 0x8d, 0x01, 0x01, 0x00, 0x00, 0xff, 0xff, 0xdd, 0xb2, 0xd0,
	0x10, 0xf1, 0x00, 0x00, 0x00,
}
